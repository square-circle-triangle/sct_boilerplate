 /* HTML5 (STAR) Boilerplate
 * ==|== normalize ==========================================================
 */

article, aside, details, figcaption, figure, footer, header, hgroup, nav, section { display: block; }
audio, canvas, video { display: inline-block; *display: inline; *zoom: 1; }
audio:not([controls]) { display: none; }
[hidden] { display: none; }

html { font-size: 100%; overflow-y: scroll; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; }
body { margin: 0; font-size: 13px; line-height: 1.231; }
body, button, input, select, textarea { font-family: sans-serif; color: #222; }

::-moz-selection { background: #ccc; color: #fff; text-shadow: none; }
::selection { background: #ccc; color: #fff; text-shadow: none; }

a { color: #00e; -webkit-tap-highlight-color: rgba(0,0,0,0); }
a:visited { color: #551a8b; }
a:hover { color: #06e; }
a:focus { outline: thin dotted; }
a:hover, a:active { outline: 0; }

abbr[title] { border-bottom: 1px dotted; }
b, strong { font-weight: bold; }
blockquote { margin: 1em 40px; }
dfn { font-style: italic; }
hr { display: block; height: 1px; border: 0; border-top: 1px solid #ccc; margin: 1em 0; padding: 0; }
ins { background: #ff9; color: #000; text-decoration: none; }
mark { background: #ff0; color: #000; font-style: italic; font-weight: bold; }
pre, code, kbd, samp { font-family: monospace, monospace; _font-family: 'courier new', monospace; font-size: 1em; }
pre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; }
q { quotes: none; }
q:before, q:after { content: ""; content: none; }
small { font-size: 85%; }
sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }
sup { top: -0.5em; }
sub { bottom: -0.25em; }
ul, ol { margin: 1em 0; padding: 0 0 0 40px; }
dd { margin: 0 0 0 40px; }
nav ul, nav ol { list-style: none; list-style-image: none; margin: 0; padding: 0; }
img { border: 0; -ms-interpolation-mode: bicubic; vertical-align: middle; }
svg:not(:root) { overflow: hidden; }
figure { margin: 0; }

form { margin: 0; }
fieldset { border: 0; margin: 0; padding: 0; }
label { cursor: pointer; }
legend { border: 0; *margin-left: -7px; padding: 0; }
button, input, select, textarea { font-size: 100%; margin: 0; vertical-align: baseline; *vertical-align: middle; }
button, input { line-height: normal; *overflow: visible; }
table button, table input { *overflow: auto; }
button, input[type="button"], input[type="reset"], input[type="submit"] { cursor: pointer; -webkit-appearance: button; }
input[type="checkbox"], input[type="radio"] { box-sizing: border-box; }
input[type="search"] { -webkit-appearance: textfield; -moz-box-sizing: content-box; -webkit-box-sizing: content-box; box-sizing: content-box; }
input[type="search"]::-webkit-search-decoration { -webkit-appearance: none; }
button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0; }
textarea { overflow: auto; vertical-align: top; resize: vertical; }
input:valid, textarea:valid {  }
input:invalid, textarea:invalid { background-color: #f0dddd; }

table { border-collapse: collapse; border-spacing: 0; }
td { vertical-align: top; }


/* ==|== primary styles =====================================================
	
	CODING CONVENTIONS:
	
	-----------------------------------------------------------------------
	
	UNDERSCORES NOT DASHES
	
	Please use underscores as separators, not dashes. Words with underscores can
	be selected with a double click, words with dashes can't.
	
	YES:
		.this_is_a_proper_classname {}
	NO:
		.this-is-not-a-proper-classname {}
	
	-----------------------------------------------------------------------
	
	NO CAMEL CASE OR UPPER CASE
	
	As a matter of convention we don't use camel case or upper case  in names.
	
	YES:
		.this_is_a_proper_classname {}
		
	NO:
		.thisIsNotAProperClassname {}
	
	-----------------------------------------------------------------------
	
	PREFIX INDENTATION
	
	If you use vendor prefixes, indent so the values line up. So you can easily
	select all values at once (in Textmate holding down OPTION key while selecting).
	
	YES:
		-webkit-box-shadow: 1px 2px 3px black;
		   -moz-box-shadow: 1px 2px 3px black;
		        box-shadow: 1px 2px 3px black;
		
	NO:
		-webkit-box-shadow: 1px 2px 3px black;
		-moz-box-shadow: 1px 2px 3px black;
		box-shadow: 1px 2px 3px black;
		
		
	-----------------------------------------------------------------------
	
	GENERALLY NO INDENTATION
	
	As a matter of convention please don't indent CSS rules (for example to show
	hierarchy) but start all rules on the beginning of a line.
	This will also sufficiently show hierarchy and make for cleaner looking code. 
	
	YES:
		#container {}
		#container .content {}
		#container .content p {}
	
	NO:
		#container {}
			#containter .content {}
				#container .content p {}
				
	-----------------------------------------------------------------------

	ONE PROPERTY PER LINE

	For readability and ease of editing, keep css rules on individual lines.  
	Blocks will soon minify stylesheets, ensuring this method does not increase load time.

	YES:
		#container {
			display: block;
			height: 0px;
			overflow: hidden;
		}
	NO:
		#container { display: block; height: 0px; overflow: hidden; }


============================================================================= */


body {
	
}

a { color: #00e; }
a:visited { color: #551a8b; }

ul, ol { margin: 0px; padding: 0; list-style: none }

/*Form Styles*/
form em { 
	display: block;
	height: 0px;
	overflow: hidden;
}
form label.error {
	color: red;
}


/* -----------------------
tinyMCE region
----------------------- */

.editable_text {

}

.editable_text h1,
.editable_text h2,
.editable_text h3,
.editable_text h4,
.editable_text h5,
.editable_text h6 {

}

.editable_text h1 {

}

.editable_text h2 {

}

.editable_text h3 {

}

.editable_text h4 {

}

.editable_text h5 {

}

.editable_text h6 {

}

.editable_text p {

}

.editable_text ul {

}

.editable_text li {

}

.editable_text a {

}

/* end tinyMCE area */




/* ==|== non-semantic helper classes ======================================== */
.ir { display: block; border: 0; text-indent: -999em; overflow: hidden; background-color: transparent; background-repeat: no-repeat; text-align: left; direction: ltr; }
.ir br { display: none; }
.hidden { display: none !important; visibility: hidden; }
.visuallyhidden { border: 0; clip: rect(0 0 0 0); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; width: 1px; }
.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus { clip: auto; height: auto; margin: 0; overflow: visible; position: static; width: auto; }
.invisible { visibility: hidden; }
.clearfix:before, .clearfix:after { content: ""; display: table; }
.clearfix:after { clear: both; }
.clearfix { zoom: 1; }



/* ==|== media queries ====================================================== */

@media only screen and (max-width: 480px) {

	/*
		helps you tell what media query is applied
	*/
	body:before {
		content: 'max-width: 480px';
		position: fixed;
		top: 0px;
		left: 50%;
		width: 100px;
		text-align: center;
		color: white;
		background-color: #C00;
		font-size: .8em;
		padding: .2em 1em;
		border-radius: 0 0 1em 1em;
		margin: 0 0 0 -50px;
		z-index: 9999;
	}

}

@media only screen and (min-width: 768px) {

}




/* ==|== print styles ======================================================= */
 
@media print {
  * { background: transparent !important; color: black !important; text-shadow: none !important; filter:none !important; -ms-filter: none !important; } 
  a, a:visited { text-decoration: underline; }
  a[href]:after { content: " (" attr(href) ")"; }
  abbr[title]:after { content: " (" attr(title) ")"; }
  .ir a:after, a[href^="javascript:"]:after, a[href^="#"]:after { content: ""; } 
  pre, blockquote { border: 1px solid #999; page-break-inside: avoid; }
  thead { display: table-header-group; }
  tr, img { page-break-inside: avoid; }
  img { max-width: 100% !important; }
  @page { margin: 0.5cm; }
  p, h2, h3 { orphans: 3; widows: 3; }
  h2, h3 { page-break-after: avoid; }
}